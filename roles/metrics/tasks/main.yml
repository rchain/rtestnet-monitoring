---

- name: Install Docker package
  become: yes
  package:
    name: docker.io
    state: present

- name: Create {{ metrics_user }} user
  become: yes
  user:
    name: "{{ metrics_user }}"
    create_home: no
    groups: docker, lxd

- name: Create {{ metrics_checkout_dir }}
  become: yes
  file:
    path: "{{ metrics_checkout_dir }}"
    state: directory
    group: "{{ deployers_group }}"
    mode: u=rwx,g=rwx,o=r

- name: Checkout runtime files
  git:
    repo: 'https://github.com/rchain/perf-harness/'
    clone: yes
    update: yes
    force: yes
    dest: "{{ metrics_checkout_dir }}"
    version: "{{ metrics_checkout_commit }}"

- name: Render metrics.service
  template:
    src: metrics.service.j2
    dest: "{{ metrics_checkout_dir }}/metrics.service"

- name: Fix attibutes
  become: yes
  file:
    path: "{{ metrics_checkout_dir }}"
    owner: "{{ metrics_user }}"
    recurse: yes

- name: Symlink metrics.service file
  become: yes
  file:
    src: "{{ metrics_checkout_dir }}/metrics.service"
    dest: /etc/systemd/system/metrics.service
    state: link

- name: Symlink rchain-perf-harness.target file
  become: yes
  file:
    src: "{{ metrics_checkout_dir }}/systemd/rchain-perf-harness.target"
    dest: /etc/systemd/system/rchain-perf-harness.target
    state: link

- name: Install nginx package
  become: yes
  package:
    name: nginx
    state: present

- name: Configure nginx
  become: yes
  template:
    src: grafana.nginx.conf.j2
    dest: /etc/nginx/sites-enabled/grafana.conf
  notify:
    - reload nginx

- name: Register systemd unit
  become: yes
  systemd:
    daemon_reload: true

- name: Install Docker PIP package
  become: yes
  package:
    name: python-docker
    state: present

- name: Create docker network
  become: yes
  docker_network:
    name: perf_harness
    driver: bridge

- name: Install docker-compose package
  become: yes
  package:
    name: docker-compose
    state: present

- name: Run systemd unit at boot
  become: yes
  systemd:
    name: metrics
    enabled: yes

- name: Restart systemd service
  become: yes
  systemd:
    name: metrics
    state: restarted
